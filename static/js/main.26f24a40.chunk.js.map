{"version":3,"sources":["img/persik.png","panels/Home.js","panels/Persik.js","panels/Load.js","App.js","index.js"],"names":["module","exports","Home","id","go","share","fetchedUser","title","before","photo_200","src","description","city","first_name","last_name","size","level","onClick","data-to","showYearAndMonthPicker","osName","platform","Persik","props","left","IOS","className","persik","alt","Load","style","display","alignItems","flexDirection","marginTop","App","useState","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","a","bridge","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","infocallmethod","console","log","gghh","window","_hsMobileUI","ReactDOM","render","getElementById"],"mappings":"2HAAAA,EAAOC,QAAU,IAA0B,oC,koBC+D5BC,EApDF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,GAAIC,EAAX,EAAWA,MAAOC,EAAlB,EAAkBA,YAAlB,OACZ,kBAAC,IAAD,CAAOH,GAAIA,GACX,kBAAC,IAAD,qGACCG,GACA,kBAAC,IAAD,CAAOC,MAAM,oCACb,kBAAC,IAAD,CACAC,OAAQF,EAAYG,UAAY,kBAAC,IAAD,CAAQC,IAAKJ,EAAYG,YAAe,KACxEE,YAAaL,EAAYM,MAAQN,EAAYM,KAAKL,MAAQD,EAAYM,KAAKL,MAAQ,IAFnF,UAIID,EAAYO,WAJhB,YAI8BP,EAAYQ,aAI1C,kBAAC,IAAD,CAAOP,MAAM,sBACb,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAQQ,KAAK,KAAKC,MAAM,IAAIC,QAASb,EAAIc,UAAQ,UAAjD,8BAIA,6BAEA,kBAAC,IAAD,CAAQH,KAAK,KAAKC,MAAM,IAAIC,QAASZ,GAArC,uEAGA,6BAEA,kBAAC,WAAD,MACA,6BACA,6BAdA,sLAgBA,6BACA,kBAAC,WAAD,CAAUc,wBAAwB,Q,gFC9B9BC,G,OAASC,eAoBAC,EAlBA,SAAAC,GAAK,OACnB,kBAAC,IAAD,CAAOpB,GAAIoB,EAAMpB,IAChB,kBAAC,IAAD,CACCqB,KAAM,kBAAC,IAAD,CAAmBP,QAASM,EAAMnB,GAAIc,UAAQ,QAClDE,IAAWK,IAAM,kBAAC,IAAD,MAAuB,kBAAC,IAAD,QAF3C,UAOA,yBAAKC,UAAU,SAAShB,IAAKiB,IAAQC,IAAI,qBCN5BC,EAZF,SAAAN,GAAK,OACjB,kBAAC,IAAD,CAAOpB,GAAIoB,EAAMpB,IACjB,yBAAK2B,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUC,cAAe,WACpE,kBAAC,IAAD,CAASlB,KAAK,QAAQe,MAAO,CAAEI,UAAW,SCiE5BC,EA9DH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAGcF,mBAAS,MAHvB,mBAGV9B,EAHU,KAGGiC,EAHH,OAIWH,mBAAS,kBAAC,IAAD,CAAerB,KAAK,WAJxC,mBAIVyB,EAJU,KAIFC,EAJE,KAMjBC,qBAAU,WAAM,4CAQf,4BAAAC,EAAA,sEACoBC,IAAOC,KAAK,uBADhC,OACOC,EADP,OAECP,EAAQO,GACRL,EAAU,MAHX,4CARe,sBACfG,IAAOG,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACnC,GAAa,yBAATD,EAAiC,CACpC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OALzB,mCAafQ,KACE,IAEH,IAAMvD,EAAK,SAAAwD,GACVtB,EAAesB,EAAEC,cAAcC,QAAQC,KA8BzC,OACC,kBAAC,IAAD,CAAM1B,YAAaA,EAAaG,OAAQA,GACxC,kBAAC,EAAD,CAAMrC,GAAG,OAAOG,YAAaA,EAAaF,GAAIA,EAAIC,MA7BpC,WAAM,4CAEnB,4BAAAsC,EAAA,sEAC8BC,IAAOC,KAAK,wBAAyB,CACjE,OAAU,aAEZ,OAAU,CAEV,aAAe,wFACf,EAAK,WAPL,OACOmB,EADP,OAUCC,QAAQC,IAAIF,GAVb,4CAFmB,uBAAC,WAAD,wBAgBrBG,MAcC,kBAAC,EAAD,CAAQhE,GAAG,SAASC,GAAIA,IACxB,kBAAC,EAAD,CAAMD,GAAG,W,OC5DViE,OAAOC,aAAc,EAErBzB,IAAOC,KAAK,gBAEZyB,IAASC,OAAO,kBAAC,EAAD,MAASnB,SAASoB,eAAe,W","file":"static/js/main.26f24a40.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport { Calendar } from \"@happysanta/vk-app-ui\";\n\nconst Home = ({ id, go, share, fetchedUser }) => (\n\t<Panel id={id}>\n\t<PanelHeader>Поздравление с ДР</PanelHeader>\n\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Bridge\">\n\t\t<Cell\n\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t>\n\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t</Cell>\n\t\t</Group>}\n\n\t\t<Group title=\"Navigation Example\">\n\t\t<Div>\n\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n\t\tShow me the Persik, please\n\t\t</Button>\n\n\t\t<br/>\n\n\t\t<Button size=\"xl\" level=\"2\" onClick={share}>\n\t\tСделать пост\n\t\t</Button>\n\t\t<br/>\n\n\t\t<Calendar />\n\t\t<br/>\n\t\t<br/>\n\t\tКалендарь с выбором года и месяцев\n\t\t<br/>\n\t\t<Calendar showYearAndMonthPicker={true}/>\n\n\t\t</Div>\n\t\t</Group>\n\t\t</Panel>\n\t\t);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tshare: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Panel, PanelHeader, Spinner } from '@vkontakte/vkui';\n\n\nconst Load = props => (\n\t<Panel id={props.id}>\n\t<div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\n\t<Spinner size=\"large\" style={{ marginTop: 20 }} />\n\t</div>\n\t</Panel>\n\t);\n\nLoad.propTypes = {\n\tid: PropTypes.string.isRequired,\n};\n\nexport default Load;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\nimport Load from './panels/Load';\n\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\tconst share = () => {\n\n\t\tasync function gghh() {\n\t\t\tconst infocallmethod = await bridge.send(\"VKWebAppCallAPIMethod\", {\n\t\t\t\t\"method\": \"groups.get\",\n\t\t//\t\"request_id\": \"324nnefj\",\n\t\t\"params\": {\n\t\t//\"user_ids\": \"573977389\",\n\t\t\"access_token\":\"98f072f1adf81e99723f0c5f6fee70d093d50ce65e99a7108fe5034978875b4165d2a4581b54c0d969068\",\n\t\t\"v\": \"5.103\"\n\t}\n})\n\t\t\tconsole.log(infocallmethod);\n\t\t//\tsetUser(infocallmethod);\n\t\t//\tsetPopout(null);\n\t}\ngghh();\n\n\n\n// \t\tconst infocallmethod =  ;\n// \t\tconsole.log(infocallmethod);\n// console.log(infocallmethod.Promise)\n// \t};\n\n};\n\nreturn (\n\t<View activePanel={activePanel} popout={popout}>\n\t<Home id='home' fetchedUser={fetchedUser} go={go} share={share} />\n\t<Persik id='persik' go={go} />\n\t<Load id=\"load\" />\n\t</View>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\nimport '@happysanta/vk-app-ui/dist/vkappui.css';\n\nwindow._hsMobileUI = true; // тут условие которое ставит true/false в зависимости от устройства.\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n \n// if (process.env.NODE_ENV === \"development\") {\n//   import(\"./eruda\").then(eruda => {}); //runtime download\n// }\n"],"sourceRoot":""}